#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>
#undef ZMK_POINTING_DEFAULT_SCRL_VAL
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define JP_ZKHK GRAVE
#define JP_MINUS MINUS
#define JP_CARET EQUAL
#define JP_YEN INT3
#define JP_AT LBKT
#define JP_LBKT RBKT
#define JP_EISU CAPS
#define JP_SEMI SEMI
#define JP_COLON SQT
#define JP_RBKT NUHS
#define JP_COMMA COMMA
#define JP_DOT DOT
#define JP_SLASH SLASH
#define JP_BSLH INT1
#define JP_MHEN INT5
#define JP_HENK INT4
#define JP_KANA INT2
#define JP_EXCL LS(N1)
#define JP_DQT LS(N2)
#define JP_HASH LS(N3)
#define JP_DLLR LS(N4)
#define JP_PRCNT LS(N5)
#define JP_AMPS LS(N6)
#define JP_SQT LS(N7)
#define JP_LPAR LS(N8)
#define JP_RPAR LS(N9)
#define JP_EQUAL LS(JP_MINUS)
#define JP_TILDE LS(JP_CARET)
#define JP_PIPE LS(JP_YEN)
#define JP_GRAVE LS(JP_AT)
#define JP_LBRC LS(JP_LBKT)
#define JP_CAPS LS(JP_EISU)
#define JP_PLUS LS(JP_SEMI)
#define JP_ASTRK LS(JP_COLON)
#define JP_RBRC LS(JP_RBKT)
#define JP_LT LS(JP_COMMA)
#define JP_RT LS(JP_DOT)
#define JP_QMARK LS(JP_SLASH)
#define JP_UNDER LS(JP_BSLH)

/ {
    behaviors {
        scroll_wheel: scroll_wheel {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_WHEEL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <20>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LeftClick {
            bindings = <&mkp LCLK>;
            key-positions = <17 18>;
        };

        RightClick {
            bindings = <&mkp RCLK>;
            key-positions = <18 19>;
        };

        StickeyLayerToScroll {
            bindings = <&sl 4>;
            key-positions = <19 20>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W         &kp E          &kp R               &kp T                                                 &kp Y          &kp U  &kp I         &kp O       &kp P
&kp A       &kp S         &kp D          &kp F               &kp G                                     &none       &kp H          &kp J  &kp K         &kp L       &kp JP_MINUS
&kp Z       &kp X         &kp C          &kp V               &kp B                 &none               &kp DELETE  &kp N          &kp M  &kp JP_COMMA  &kp JP_DOT  &kp JP_AT
&kp ESCAPE  &kp LEFT_WIN  &mt LCTRL TAB  &lt 1 INT_MUHENKAN    &mt LEFT_SHIFT SPACE   &lt 2 INT_HENKAN    &kp ENTER   &kp BACKSPACE                                   &none
            >;
        };

        layer_1 {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6       &kp N7        &kp N8       &kp N9        &kp N0
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp JP_LBKT  &kp JP_RBKT  &kp JP_SLASH
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp JP_CARET  &kp JP_YEN  &kp JP_SEMI  &kp JP_COLON  &kp JP_UNDER
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                                &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6  &kp F7    &kp F8    &kp F9     &kp F10
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans    &kp UP    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                 &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
            sensor-bindings = <&scroll_up_down>;

        };
    };
};

&sl {
    release-after-ms = <0>;
};
